# docker compose -f builder.yml run --rm frontend-init ; docker compose -f builder.yml run --rm backend-init
# docker compose -f builder.yml run --rm frontend-init
# docker compose -f builder.yml run --rm backend-init

services:
  frontend-init:
    image: node:20
    volumes:
      - ./frontend:/app
    working_dir: /app
    command: sh -c "npm create vite@latest . && npm install"

  backend-init:
    image: python:3.11-slim
    volumes:
      - ./backend:/app
    working_dir: /app
    command: >
      sh -c "
      apt-get update &&
      apt-get install -y sed &&
      pip install --upgrade pip &&
      pip install django python-decouple djangorestframework django-cors-headers &&
      django-admin startproject config . && \
      sed -i \"/from pathlib import Path/i import os\" config/settings.py && \
      sed -i \"s/^DEBUG = .*/DEBUG = os.getenv('DEBUG')/\" config/settings.py && \
      sed -i \"s/^ALLOWED_HOSTS = .*/ALLOWED_HOSTS = os.getenv('HOSTS').split(',')/\" config/settings.py && \
      sed -i \"/INSTALLED_APPS = \\[/a \\ \\ \\ \\ 'corsheaders',\\n\\ \\ \\ \\ 'rest_framework',\" config/settings.py && \
      sed -i \"/MIDDLEWARE = \\[/a \\ \\ \\ \\ 'corsheaders.middleware.CorsMiddleware',\" config/settings.py && \
      sed -i \"/MIDDLEWARE = \\[/a \\ \\ \\ \\ 'whitenoise.middleware.WhiteNoiseMiddleware',\" config/settings.py && \
      sed -i \"/# Database/,+8d\" config/settings.py && \
      printf '\\n# Database\\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\\n\\nDATABASES = {\\n    '\\''default'\\'': {\\n        '\\''ENGINE'\\'': '\\''django.db.backends.postgresql'\\'',\\n        '\\''NAME'\\'': os.getenv('\\''DB_NAME'\\''),\\n        '\\''USER'\\'': os.getenv('\\''DB_USER'\\''),\\n        '\\''PASSWORD'\\'': os.getenv('\\''DB_PASSWORD'\\''),\\n        '\\''HOST'\\'': os.getenv('\\''DB_HOST'\\''),\\n        '\\''PORT'\\'': os.getenv('\\''DB_PORT'\\''),\\n    }\\n}\\n\\n' >> config/settings.py && \
      echo \"\\nCORS_ALLOW_ALL_ORIGINS = True\" >> config/settings.py
      "