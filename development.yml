# development.yml
# docker compose --env-file .env/.development -f development.yml up --build
services:
  backend:
    environment:
      - PYTHONPATH=/app
    build:
      context: ./modules
      dockerfile: ../compose/development/Dockerfile.backend
    volumes:
      - ./modules:/app
    ports:
      - "8000:8000"
    env_file: .env/.development
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "sleep 5 &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  frontend:
    build:
      context: ./ui
      dockerfile: ../compose/development/Dockerfile.frontend
    volumes:
      - ./ui:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev -- --host

  db:
    build:
      context: .
      dockerfile: ./compose/development/Dockerfile.db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  db_data:
